#!/usr/bin/env bash


################################################################################
### Head: Url
##

# * https://github.com/samwhelp/skel-project-plan/blob/gh-pages/demo/sh/standalone/bin/demo-ctrl
# * https://www.freedesktop.org/wiki/Specifications/XSettingsRegistry/

##
### Tail: Url
################################################################################


################################################################################
### Head: Note
##

# $ xfconf-query -c 'xsettings' -l | grep Theme
#
# /Gtk/CursorThemeName
# /Gtk/CursorThemeSize
# /Gtk/KeyThemeName
# /Net/FallbackIconTheme
# /Net/IconThemeName
# /Net/SoundThemeName
# /Net/ThemeName


##
### Tail: Note
################################################################################


################################################################################
### Head: Init
##
set -e ## for Exit immediately if a command exits with a non-zero status.
THE_BASE_DIR_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
##
### Tail: Init
################################################################################


################################################################################
### Head: Util_Debug
##

util_debug_echo () {
	if is_debug; then
		echo "$@" 1>&2;
	fi
}

##
### Head: Util_Debug
################################################################################


################################################################################
### Head: Base
##
find_dir_path () {
	if [ ! -d $(dirname -- "$1") ]; then
		dirname -- "$1"
		return 1
	fi
	echo $(cd -P -- "$(dirname -- "$1")" && pwd -P)
}

##THIS_BASE_DIR_PATH=$(find_dir_path $0)

## $ export DEBUG_THEME_CTRL=true
is_debug () {
	if [ "$DEBUG_THEME_CTRL" = "true" ]; then
		return 0
	fi

	return 1
}

is_not_debug () {
	! is_debug
}

base_var_init () {

	#THE_PLAN_DIR_PATH=$(find_dir_path "$THE_BASE_DIR_PATH/../.")
	THE_PLAN_DIR_PATH=$(find_dir_path "$THE_BASE_DIR_PATH/.")

	THE_CMD_NAME="xfwm4-theme-ctrl"


	THE_ASSET_DIR_NAME="asset"
	THE_ASSET_DIR_PATH="$THE_PLAN_DIR_PATH/$THE_ASSET_DIR_NAME"

	THE_VAR_DIR_NAME="var"
	THE_VAR_DIR_PATH="$THE_PLAN_DIR_PATH/$THE_VAR_DIR_NAME"


	THE_PROFILE_DIR_NAME=".${THE_CMD_NAME}-profile"
	THE_PROFILE_DIR_PATH="$HOME/$THE_PROFILE_DIR_NAME"

	THE_PROJECT_DIR_NAME="$THE_CMD_NAME"
	THE_PROJECT_DIR_PATH="$HOME/.local/share/$THE_PROJECT_DIR_NAME"

	THE_CONFIG_DIR_NAME="$THE_CMD_NAME"
	THE_CONFIG_DIR_PATH="$HOME/.config/$THE_CONFIG_DIR_NAME"

	THE_CACHE_DIR_NAME="$THE_CMD_NAME"
	THE_CACHE_DIR_PATH="$HOME/.cache/$THE_CACHE_DIR_NAME"


}

base_var_dump () {

	is_not_debug && return 0

	util_debug_echo
	util_debug_echo "################################################################################"
	util_debug_echo "### Head: var_dump"
	util_debug_echo "##"
	util_debug_echo "#"


	util_debug_echo "THE_PLAN_DIR_PATH=$THE_PLAN_DIR_PATH"

	util_debug_echo "THE_CMD_NAME=$THE_CMD_NAME"


	util_debug_echo "THE_ASSET_DIR_NAME=$THE_ASSET_DIR_NAME"
	util_debug_echo "THE_ASSET_DIR_PATH=$THE_ASSET_DIR_PATH"

	util_debug_echo "THE_VAR_DIR_NAME=$THE_VAR_DIR_NAME"
	util_debug_echo "THE_VAR_DIR_PATH=$THE_VAR_DIR_PATH"




	util_debug_echo "THE_PROFILE_DIR_NAME=$THE_PROFILE_DIR_NAME"
	util_debug_echo "THE_PROFILE_DIR_PATH=$THE_PROFILE_DIR_PATH"

	util_debug_echo "THE_PROJECT_DIR_NAME=$THE_PROJECT_DIR_NAME"
	util_debug_echo "THE_PROJECT_DIR_PATH=$THE_PROJECT_DIR_PATH"

	util_debug_echo "THE_CONFIG_DIR_NAME=$THE_CONFIG_DIR_NAME"
	util_debug_echo "THE_CONFIG_DIR_PATH=$THE_CONFIG_DIR_PATH"

	util_debug_echo "THE_CACHE_DIR_NAME=$THE_CACHE_DIR_NAME"
	util_debug_echo "THE_CACHE_DIR_PATH=$THE_CACHE_DIR_PATH"



	util_debug_echo "#"
	util_debug_echo "##"
	util_debug_echo "### Tail: var_dump"
	util_debug_echo "################################################################################"
	util_debug_echo
}


base_var_init

base_var_dump

##
### Tail: Base
################################################################################





################################################################################
### Head: Util_SubCmd
##

sub_cmd_find_function_name () {
	echo "sub_run_$1"
}

##
### Tail: Util_SubCmd
################################################################################




################################################################################
### Head: Sys
##

sys_xfce_set_wm_theme () {

	local wm_theme="$1"

	## ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml
	## <property name="theme" type="string" value="Numix"/>

	xfconf-query -c 'xfwm4' -p '/general/theme' -s "$wm_theme"
	echo "xfconf-query -c 'xfwm4' -p '/general/theme' -s '$wm_theme'"

}

sys_xfce_get_wm_theme () {

	xfconf-query -c 'xfwm4' -p '/general/theme'

}

sys_xfce_set_ui_theme () {

	local ui_theme="$1"

	## ~/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml
	## <property name="ThemeName" type="string" value="Numix"/>

	xfconf-query -c 'xsettings' -p '/Net/ThemeName' -s "$ui_theme"
	echo "xfconf-query -c 'xsettings' -p '/Net/ThemeName' -s '$ui_theme'"

}

sys_xfce_get_ui_theme () {

	xfconf-query -c 'xsettings' -p '/Net/ThemeName'

}

sys_xfce_set_icon_theme () {

	local icon_theme="$1"

	## ~/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml
	## <property name="IconThemeName" type="string" value="Numix"/>

	xfconf-query -c 'xsettings' -p '/Net/IconThemeName' -s "$icon_theme"
	echo "xfconf-query -c 'xsettings' -p '/Net/IconThemeName' -s '$icon_theme'"

}

sys_xfce_get_icon_theme () {

	xfconf-query -c 'xsettings' -p '/Net/IconThemeName'

}

sys_xfce_set_cursor_theme () {

	local cursor_theme_name="$1"
	local cursor_theme_size="$2"

	if [ "none${cursor_theme_name}" = "none" ]; then
		cursor_theme_name="default"
	fi

	if [ "none${cursor_theme_size}" = "none" ]; then
		cursor_theme_size="24"
	fi

	#echo $cursor_theme_name
	#echo $cursor_theme_size
	#return


	## ~/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml

	## <property name="CursorThemeName" type="string" value="default"/>
	## <property name="CursorThemeSize" type="int" value="24"/>

	## <property name="CursorThemeName" type="string" value="breeze_cursors"/>
	## <property name="CursorThemeSize" type="int" value="24"/>

	## <property name="CursorThemeName" type="string" value="Breeze_Snow"/>
	## <property name="CursorThemeSize" type="int" value="24"/>


	echo "xfconf-query -c 'xsettings' -p '/Gtk/CursorThemeName' -s '$cursor_theme_name'"
	xfconf-query -c 'xsettings' -p '/Gtk/CursorThemeName' -s "$cursor_theme_name"

	echo "xfconf-query -c 'xsettings' -p '/Gtk/CursorThemeSize' -s '$cursor_theme_size'"
	xfconf-query -c 'xsettings' -p '/Gtk/CursorThemeSize' -s "$cursor_theme_size"


}

sys_xfce_get_cursor_theme () {
	local name=$(xfconf-query -c 'xsettings' -p '/Gtk/CursorThemeName')

	local size=$(xfconf-query -c 'xsettings' -p '/Gtk/CursorThemeSize')

	echo "${name} ${size}"
}

sys_xfce_get_all () {

	local wm_theme=$(sys_xfce_get_wm_theme)
	local ui_theme=$(sys_xfce_get_ui_theme)
	local icon_theme=$(sys_xfce_get_icon_theme)
	local cursor_theme=$(sys_xfce_get_cursor_theme)

	echo "wm_theme: ${wm_theme}"
	echo "ui_theme: ${ui_theme}"
	echo "icon_theme: ${icon_theme}"
	echo "cursor_theme: ${cursor_theme}"

}


sys_xfce_get_all_default () {

	local wm_theme=$(sys_xfce_get_wm_theme_default)
	local ui_theme=$(sys_xfce_get_ui_theme_default)
	local icon_theme=$(sys_xfce_get_icon_theme_default)
	local cursor_theme=$(sys_xfce_get_cursor_theme_default)
	local cursor_theme_for_dark=$(sys_xfce_get_cursor_theme_default_for_dark)
	local cursor_theme_for_light=$(sys_xfce_get_cursor_theme_default_for_light)

	echo "wm_theme: ${wm_theme}"
	echo "ui_theme: ${ui_theme}"
	echo "icon_theme: ${icon_theme}"
	echo "cursor_theme: ${cursor_theme}"
	echo "cursor_theme_for_dark: ${cursor_theme_for_dark}"
	echo "cursor_theme_for_light: ${cursor_theme_for_light}"

}

sys_xfce_set_all_default () {

	sys_xfce_set_wm_theme_default
	sys_xfce_set_ui_theme_default
	sys_xfce_set_icon_theme_default
	sys_xfce_set_cursor_theme_default

}

sys_xfce_get_wm_theme_default () {

	echo 'Breeze'

}

sys_xfce_set_wm_theme_default () {

	sys_xfce_set_wm_theme $(sys_xfce_get_wm_theme_default)

}

sys_xfce_get_ui_theme_default () {

	echo 'NumixBlue'

}

sys_xfce_set_ui_theme_default () {

	sys_xfce_set_ui_theme $(sys_xfce_get_ui_theme_default)

}

sys_xfce_get_icon_theme_default () {

	echo 'Numix'

}

sys_xfce_set_icon_theme_default () {

	sys_xfce_set_icon_theme $(sys_xfce_get_icon_theme_default)

}

sys_xfce_get_cursor_theme_default () {

	echo 'breeze_cursors' 24

}

sys_xfce_set_cursor_theme_default () {

	sys_xfce_set_cursor_theme $(sys_xfce_get_cursor_theme_default)

}

sys_xfce_get_cursor_theme_default_for_dark () {

	echo 'Breeze_Snow' 24

}

sys_xfce_set_cursor_theme_default_for_dark () {

	sys_xfce_set_cursor_theme $(sys_xfce_get_cursor_theme_default_for_dark)
}

sys_xfce_get_cursor_theme_default_for_light () {

	echo 'breeze_cursors' 24

}

sys_xfce_set_cursor_theme_default_for_light () {

	sys_xfce_set_cursor_theme $(sys_xfce_get_cursor_theme_default_for_light)

}

##
### Tail: Sys
################################################################################


################################################################################
### Head: Sys_Install_Theme
##

sys_xfce_install_theme () {

	local wm_theme="$1"

	#echo "$(dpkg -L xfce4-settings | grep appearance-install-theme) themes/${wm_theme}"
	#(dpkg -L xfce4-settings | grep appearance-install-theme) "themes/${wm_theme}"

	echo "/usr/lib/x86_64-linux-gnu/xfce4/settings/appearance-install-theme themes/${wm_theme}"
	/usr/lib/x86_64-linux-gnu/xfce4/settings/appearance-install-theme "themes/${wm_theme}"

	echo
	echo 'Installed:'
	file "$HOME/.themes/${wm_theme}"
	ls -l "$HOME/.themes/${wm_theme}"
}

##
### Tail: Sys_Install_Theme
################################################################################


################################################################################
### Head: Model
##

xtc_install_all () {

	xtc_install 'Pastel_Dark'
	xtc_install 'Pastel_Dark_NoTitle'
	xtc_install 'Pastel_Light'
	xtc_install 'Pastel_Light_NoTitle'
}

xtc_install_usage () {

	local cmd_name="$THE_CMD_NAME"

cat << EOF

Usage:
	$ $cmd_name install {name}


Example:
	$ $cmd_name install 'Pastel_Dark'
	$ $cmd_name install 'Pastel_Dark_NoTitle'
	$ $cmd_name install 'Pastel_Light'
	$ $cmd_name install 'Pastel_Light_NoTitle'

EOF

}

xtc_install () {

	local wm_theme="$1"

	if [ "none${wm_theme}" = "none" ]; then
		echo
		echo "## Need {name}"
		xtc_install_usage
		return
	fi

	sys_xfce_install_theme "$wm_theme"

}

xtc_list () {
	ls "themes" -1
}

xtc_now () {
	local wm_theme="$1"

	if [ "none${wm_theme}" = "none" ]; then
		sys_xfce_get_wm_theme
		return
	fi

	sys_xfce_set_wm_theme "$wm_theme"
}

##
### Tail: Model
################################################################################


################################################################################
### Head: SubCmd
##

sub_run_help () {
	main_usage $@
}

sub_run_install_all () {
	#echo "sub_run_install_all"
	xtc_install_all $@
}

sub_run_install () {
	#echo "sub_run_install"
	xtc_install $@
}

sub_run_list () {
	#echo "sub_run_list"
	xtc_list $@
}

sub_run_now () {
	#echo "sub_run_now"
	xtc_now $@
}

##
### Tail: SubCmd
################################################################################


################################################################################
### Head: Main
##

main_usage () {
	##local cmd_name="$0"
	local cmd_name="$THE_CMD_NAME"

cat << EOF
Usage:
	$ $cmd_name [action]

	$ $cmd_name list

	$ $cmd_name install {name}

	$ $cmd_name install_all

	$ $cmd_name now [name]


Example:

	## help

	$ $cmd_name
	$ $cmd_name help


	## available to install

	$ $cmd_name list


	## install

	$ $cmd_name install 'Pastel_Dark'
	$ $cmd_name install 'Pastel_Dark_NoTitle'
	$ $cmd_name install 'Pastel_Light'
	$ $cmd_name install 'Pastel_Light_NoTitle'

	$ $cmd_name install_all


	## get current

	$ $cmd_name now


	## set current

	$ $cmd_name now 'Pastel_Dark'
	$ $cmd_name now 'Pastel_Dark_NoTitle'
	$ $cmd_name now 'Pastel_Light'
	$ $cmd_name now 'Pastel_Light_NoTitle'

Debug:
	$ export DEBUG_THEME_CTRL=true

EOF

}

main_check_args_size () {
	if [ $1 -le 0 ]; then
		shift
		main_run_default_sub_cmd "$@"
		exit 1
	fi
}

main_run_default_sub_cmd () {
	main_usage "$@"
}

main_run_sub_cmd () {

	local sub_cmd="$1"

	shift

	local args="$@"

	local function_name=$(sub_cmd_find_function_name "$sub_cmd")

	## if ! command -v $function_name > /dev/null; then
	if ! type -p $function_name; then
		util_debug_echo "[Debug] sub_cmd_function_not_exist: sub_cmd=$sub_cmd; function_name=$function_name"

		echo
		main_run_default_sub_cmd "$args"
		return 1
	fi

	"$function_name" "$args" ## run sub cmd function


}

## Start
main_check_args_size $# "$@"

main_run_sub_cmd "$@"

##
### Tail: Main
################################################################################
